name: Ogawayama-Install-Dependncies

inputs:
  sharksfin_implementation:
    description: switch sharksfin implementation
    default: shirakami
  checkout:
    description: Skip checkout if false
    default: true
  path:
    description: Relative path under $GITHUB_WORKSPACE to place the repository
    default: build-deps
  bridge-only:
    description: Install only bridge
    default: off
  cmake_build_option:
    type: string
    default: ''

runs:
  using: "composite"

  steps:
    - name: Checkout_Metadata_Manager
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' && inputs.bridge-only == 'off' }}
      with:
        repository: project-tsurugi/metadata-manager
        path: ${{ inputs.path }}/metadata-manager
        ref: master
        submodules: true

    - name: Checkout_Message_Manager
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' && inputs.bridge-only == 'off' }}
      with:
        repository: project-tsurugi/message-manager
        path: ${{ inputs.path }}/message-manager
        ref: master

    - name: Install_Metadata_Manager
      if: ${{ inputs.bridge-only == 'off' }}
      run: |
        cd ${{ inputs.path }}/metadata-manager
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DDATA_STORAGE=json -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Message_Manager
      if: ${{ inputs.bridge-only == 'off' }}
      run: |
        cd ${{ inputs.path }}/message-manager
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash
